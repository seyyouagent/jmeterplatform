package com.test.controller;import com.test.bean.ProviderBean;import com.test.service.ProviderServer;import com.test.utils.AjaxResponseBody;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import lombok.extern.slf4j.Slf4j;import org.apache.http.HttpStatus;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;@RestController@Slf4j@RequestMapping("/dubboClient")@Api(value = "DubboClient", description = "dubbo接口调用")public class DubboClientController {    @Autowired    ProviderServer providerServer;    /**     * dubbo接口调用     * @param p     * @return     */    @PostMapping(value = "/httpDubbo",consumes = "application/json;charset=UTF-8")    @ResponseBody    @ApiOperation(value = "dubbo接口泛化调用", notes = "dubbo接口泛化调用")    public Object bubboTest(@RequestBody ProviderBean p) {        Object o = providerServer.invoke(p.getMethodName(),p.getParams(),p.getApplicationName(),                p.getRegistryAdd(),p.getInterfaceName(),p.getAddress(),p.getGroup(),p.getVersion(),p.getClassName());        return o;    }    /**     * dubbo接口调用     * @param p     * @return     */    @PostMapping(value = "/httpDubbos",consumes = "application/json;charset=UTF-8")    @ResponseBody    @ApiOperation(value = "dubbo接口泛化调用", notes = "dubbo接口泛化调用")    public AjaxResponseBody bubboTests(@RequestBody ProviderBean p) {        Object o = providerServer.invoke(p.getMethodName(),p.getParams(),p.getApplicationName(),                p.getRegistryAdd(),p.getInterfaceName(),p.getAddress(),p.getGroup(),p.getVersion(),p.getClassName());        return new AjaxResponseBody(HttpStatus.SC_OK,"",o,null);    }}